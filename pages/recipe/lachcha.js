import Head from 'next/head';
import { useEffect, useRef, useState } from 'react';
import { useReactToPrint } from 'react-to-print';
import {Info,PrintHeader,ProductSelect,RmView,Heading,Total} from '../../components/Index';
import { getProducts, getRecipe } from '../../utils/api_utils';
import Recipe from '../../utils/recipe';
import { useDownloadExcel } from 'react-export-table-to-excel';



export default function Raw() {
  const printRef = useRef()
  const excelRef = useRef()
  const [id,setId] = useState('')
  const [product,setProduct] = useState({})
  const [products,setProducts] = useState([])

  useEffect(()=>{
    getProducts('Lachcha',setProducts)
  },[])

  useEffect(()=>{
    if(id) getRecipe(id,setProduct)
  },[id])
  

  const handlePrint = useReactToPrint({
    content: () => printRef.current,
    documentTitle : product?.name + " [Version-"+product?.version+"]"
  });

  const { onDownload } = useDownloadExcel({
    currentTableRef: excelRef.current,
    filename: `${product?.section} - ${product?.name} [v-${product?.version}]`,
    sheet: product?.name
  });

  const {
    version,
    packetWeight,
    packetPerCarton,
    processLoss,
    foilWeight,
    master_poly_24_22_5,
  } = product

  const recipe = new Recipe(product)

  let total
  if(product?.ingredients) total = recipe.totalInput()

  let totalProcessLoss
  if(total)  totalProcessLoss = recipe.totalProcessLoss()

  let output
  if(totalProcessLoss) output = recipe.totalOutput()
  
  let carton
  if(output) carton = recipe.totalCarton()
  
  return (
    <div className='raw-consumption '>
      <Head>
        <title>Check your recipes</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.png" />
      </Head>
      <div className='raw print:mx-12' ref={printRef}>
        <PrintHeader/>
        <div>
        <Heading {...{product,handlePrint,onDownload}}/>
          
          <div className='space-y-2 py-2 print:space-y-0 print:flex justify-between print:space-x-4 print:p-2 print:text-sm'>
            <ProductSelect {...{setId,products}}/>
          </div>

          {product?.ingredients && <div className='recipe-area'>
            {/*===================== short info area ===================*/}
            <div className='pb-2'>
              <h3 className='text-center p-1 font-bold bg-gray-500 text-white print:mx-2'>Information</h3>
              <div className='print:grid grid-cols-2 gap-x-8 print:text-sm print:px-2'>
                <Info text='Version' value={version} unit=''/>
                <Info text='Packet Weight' value={packetWeight} unit='gm'/>
                <Info text='Packet Per Carton' value={packetPerCarton}q unit='Packet'/>
                <Info text='Process Loss' value={processLoss} unit='%'/>
                <Info text='Foil Weight' value={foilWeight} unit='gm'/>
                <Info text='Master Poly 24"x22.5"' value={master_poly_24_22_5} unit='gm'/>
                <Info text='Carton Per Batch' value={carton} unit=''/>
              </div>
            </div>

            {/*===================== ingredient list area ===================*/}
            <div className='consumption space-y-2'>
                <div className="heading print:px-2">
                    <p className="name">Ingredients</p>
                    <p>Quantity (kg)</p>
                </div>
                <div className='space-y-2 print:px-2 print:pb-2'>
                  <RmView name='Flour A Grade' ingredient={product?.ingredients?.flourGrade_A}/>
                  <RmView name='Flour B Grade' ingredient={product?.ingredients?.flourGrade_B}/>
                  <RmView name='Palm Oil Super' ingredient={product?.ingredients?.palmOilSuper}/>
                  <RmView name='Starch Powder' ingredient={product?.ingredients?.starchPowder}/>
                  <RmView name='Dalda Hard Pusti' ingredient={product?.ingredients?.daldaHardPUSTI}/>
                  <RmView name='Ghee' ingredient={product?.ingredients?.ghee}/>
                  <RmView name='Ghee Flavour' ingredient={product?.ingredients?.gheeFlavour}/>
                  <RmView name='TBHQ' ingredient={product?.ingredients?.tbhq}/>
                </div>
                <Total {...{total,processLoss,totalProcessLoss,output}}/>
            </div>
          </div>}
        </div>
      </div>
    </div>
  )
}